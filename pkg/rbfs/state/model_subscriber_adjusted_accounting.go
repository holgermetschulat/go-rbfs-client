/*
 * RBFS Operational State API
 *
 * This contract describes the RBFS Operational State API contract defined by RBMS, the RtBrick Management System. This API is a _consumer-driven_ API, which means that all changes to this API **must be approved** by RBMS, the consumer of this API to avoid compatibility issues.  The API is kept backwards-compatible and anyone is allowed to _use_ this API.  The consumer of the API _must_ ignore additional attributes not explained in this specification. Additional attributes are _not_ considered violating backwards compatibility. In contrary, additional attributes allow extending the API while preserving backward compatibility.
 *
 * API version: 1.0.0
 * Contact: martin@rtbrick.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package state

// Current adjusted accounting values.
type SubscriberAdjustedAccounting struct {
	// A flag to indicate whether accounting is in progress (true) or  the final counter values have been read from the hardware (false).
	AccountingActive bool `json:"accounting_active,omitempty"`
	// Number of packets received in this session.
	SessionIngressPackets int32 `json:"session_ingress_packets,omitempty"`
	// Number of bytes received in this session.
	SessionIngressBytes int32 `json:"session_ingress_bytes,omitempty"`
	// Number of packets sent in this session.
	SessionEgressPackets int32 `json:"session_egress_packets,omitempty"`
	// Number of bytes sent in this session.
	SessionEgressBytes int32 `json:"session_egress_bytes,omitempty"`
	// Number of packets received on the subscriber interface.
	IflIngressPackets int32 `json:"ifl_ingress_packets,omitempty"`
	// Number of bytes received on the subscriber interface.
	IflIngressBytes int32 `json:"ifl_ingress_bytes,omitempty"`
	// Number of packets sent over  the subscriber interface.
	IflEgressPackets int32 `json:"ifl_egress_packets,omitempty"`
	// Number of bytes sent over  the subscriber interface.
	IflEgressBytes int32 `json:"ifl_egress_bytes,omitempty"`
	// Number of sent packets in class 0.
	Class0EgressPackets int32 `json:"class_0_egress_packets,omitempty"`
	// Number of sent bytes in class 0.
	Class0EgressBytes int32 `json:"class_0_egress_bytes,omitempty"`
	// Number of sent packets in class 1.
	Class1EgressPackets int32 `json:"class_1_egress_packets,omitempty"`
	// Number of sent bytes in class 1.
	Class1EgressBytes int32 `json:"class_1_egress_bytes,omitempty"`
	// Number of sent packets in class 2.
	Class2EgressPackets int32 `json:"class_2_egress_packets,omitempty"`
	// Number of sent bytes in class 2.
	Class2EgressBytes int32 `json:"class_2_egress_bytes,omitempty"`
	// Number of sent packets in class 3.
	Class3EgressPackets int32 `json:"class_3_egress_packets,omitempty"`
	// Number of sent bytes in class 3.
	Class3EgressBytes int32 `json:"class_3_egress_bytes,omitempty"`
	// Number of sent packets in class 4.
	Class4EgressPackets int32 `json:"class_4_egress_packets,omitempty"`
	// Number of sent bytes in class 4.
	Class4EgressBytes int32 `json:"class_4_egress_bytes,omitempty"`
	// Number of sent packets in class 5.
	Class5EgressPackets int32 `json:"class_5_egress_packets,omitempty"`
	// Number of sent bytes in class 5.
	Class5EgressBytes int32 `json:"class_5_egress_bytes,omitempty"`
	// Number of sent packets in class 6.
	Class6EgressPackets int32 `json:"class_6_egress_packets,omitempty"`
	// Number of sent bytes in class 6.
	Class6EgressBytes int32 `json:"class_6_egress_bytes,omitempty"`
	// Number of sent packets in class 7.
	Class7EgressPackets int32 `json:"class_7_egress_packets,omitempty"`
	// Number of sent bytes in class 7.
	Class7EgressBytes int32 `json:"class_7_egress_bytes,omitempty"`
	// Number of received packets in policer level 1.
	PolicerL1IngressPackets int32 `json:"policer_l1_ingress_packets,omitempty"`
	// Number of received bytes in policer level 1.
	PolicerL1IngressBytes int32 `json:"policer_l1_ingress_bytes,omitempty"`
	// Number of received packets in policer level 2.
	PolicerL2IngressPackets int32 `json:"policer_l2_ingress_packets,omitempty"`
	// Number of received bytes in policer level 2.
	PolicerL2IngressBytes int32 `json:"policer_l2_ingress_bytes,omitempty"`
	// Number of received packets in policer level 3.
	PolicerL3IngressPackets int32 `json:"policer_l3_ingress_packets,omitempty"`
	// Number of received bytes in policer level 3.
	PolicerL3IngressBytes int32 `json:"policer_l3_ingress_bytes,omitempty"`
	// Number of received packets in policer level 4.
	PolicerL4IngressPackets int32 `json:"policer_l4_ingress_packets,omitempty"`
	// Number of received bytes in policer level 4.
	PolicerL4IngressBytes int32 `json:"policer_l4_ingress_bytes,omitempty"`
}
